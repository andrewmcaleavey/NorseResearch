% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cleaningFuncs.R
\name{combine_q_vars}
\alias{combine_q_vars}
\title{Combine Paired Q Variables}
\usage{
combine_q_vars(df, pattern_pre = "^Q\\\\d+$", pattern_suff = "_1")
}
\arguments{
\item{df}{A data frame containing the Q-variables to be combined.}

\item{pattern_pre}{A regular expression pattern to identify the base Q-variables. Default is
\code{"^Q\\\\d+$"}.}

\item{pattern_suff}{A suffix string to identify the companion variable. Default is \code{"_1"}.}
}
\value{
A data frame with the Q-variables combined. The base variables are updated with the
combined values and the companion variables are dropped.
}
\description{
This function combines paired Q-variables in a data frame. A paired Q-variable consists of a
base variable and a companion variable whose name is formed by appending a suffix (default: "_1")
to the base variable name. For each row, the function first checks that at most one of the two
values is non-missing. If both are non-missing, an error is thrown indicating the conflicting rows.
Otherwise, it updates the base variable with the companion value if the base variable is missing,
and then removes the companion variable from the data frame.
}
\details{
The function first identifies all base Q-variables that match \code{pattern_pre} and
then finds those for which a companion variable (with name equal to the base variable plus
\code{pattern_suff}) exists. It uses \code{dplyr::mutate(across())} to process these variables:
for each row, if the base variable is \code{NA} the function replaces it with the companion
value. If both are non-\code{NA} for any row, the function stops with an error.
}
\examples{
\dontrun{
df <- data.frame(Q140 = c(NA, 2, 3),
                 Q140_1 = c(1, NA, NA),
                 Q150 = c(4, NA, 6),
                 Q150_1 = c(NA, 5, NA),
                 stringsAsFactors = FALSE)
df_combined <- combine_q_vars(df)
}

}
